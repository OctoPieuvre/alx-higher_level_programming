
This file contains doctests for the matrix_divided() function.

The matrix_divided() function takes a matrix and a divisor, and returns a new matrix with each element of the original matrix divided by the divisor, rounded to two decimal places.

Usage:
    To run the tests, execute the following command:
    python3 -m doctest ./tests/matrix_divided_tests.txt

Test cases:
    The following test cases will be used to test the matrix_divided() function.

    >>> matrix_divided([[1, 2], [3, 4]], 2)
    [[0.5, 1.0], [1.5, 2.0]]

    >>> matrix_divided([[3, 6, 9], [12, 15, 18], [21, 24, 27]], 4)
    [[0.75, 1.5, 2.25], [3.0, 3.75, 4.5], [5.25, 6.0, 6.75]]

    >>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], 1.5)
    [[1.0, 1.67], [2.33, 3.0]]

    >>> matrix_divided([[0, 0], [0, 0]], 1)
    [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix_divided([[1, 2], [3, 4]], -1)
    [[-1.0, -2.0], [-3.0, -4.0]]

    Invalid input test cases:

    >>> matrix_divided([[1, 2], [3, 4], [5]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2], [3, 4], [5, '6']], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided('123', 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2], [3, 4]], 'abc')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
